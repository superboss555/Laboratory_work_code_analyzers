PROGRAM (line 0)
  FUNCTION: sum (line 3)
    TYPE: int (line 3)
    IDENTIFIER: sum (line 3)
    PARAM_LIST (line 0)
      VAR_DECL (line 3)
        TYPE: int (line 3)
        IDENTIFIER: a (line 3)
      VAR_DECL (line 3)
        TYPE: int (line 3)
        IDENTIFIER: b (line 3)
    STATEMENT (line 0)
      RETURN (line 4)
        EXPRESSION (line 4)
          IDENTIFIER: a (line 4)
          OPERATOR: + (line 4)
          IDENTIFIER: b (line 4)
  FUNCTION: main (line 7)
    TYPE: int (line 7)
    IDENTIFIER: main (line 7)
    PARAM_LIST (line 0)
    STATEMENT (line 0)
      VAR_DECL (line 8)
        TYPE: int (line 8)
        IDENTIFIER: x (line 8)
        LITERAL: 5 (line 8)
      FUNCTION_CALL: printf (line 9)
        ARG_LIST (line 0)
          LITERAL: c: %d\n (line 9)
          IDENTIFIER: c (line 9)
      VAR_DECL (line 10)
        TYPE: int (line 10)
        IDENTIFIER: y (line 10)
        LITERAL: 10 (line 10)
      VAR_DECL (line 11)
        TYPE: int (line 11)
        IDENTIFIER: result (line 11)
        FUNCTION_CALL: sum (line 11)
          ARG_LIST (line 0)
            IDENTIFIER: x (line 11)
            IDENTIFIER: y (line 11)
      FUNCTION_CALL: printf (line 12)
        ARG_LIST (line 0)
          LITERAL: result: %d\n (line 12)
          IDENTIFIER: result (line 12)
      FUNCTION_CALL: printf (line 13)
        ARG_LIST (line 0)
          LITERAL: z: %d\n (line 13)
          IDENTIFIER: z (line 13)
      FUNCTION_CALL: printf (line 14)
        ARG_LIST (line 0)
          LITERAL: w: %d\n (line 14)
          IDENTIFIER: w (line 14)
      VAR_DECL (line 15)
        TYPE: int (line 15)
        IDENTIFIER: t (line 15)
        EXPRESSION (line 15)
          IDENTIFIER: v (line 15)
          OPERATOR: + (line 15)
          LITERAL: 5 (line 15)
      FUNCTION_CALL: printf (line 16)
        ARG_LIST (line 0)
          LITERAL: t: %d\n (line 16)
          IDENTIFIER: t (line 16)
      RETURN (line 17)
        LITERAL: 0 (line 17)
